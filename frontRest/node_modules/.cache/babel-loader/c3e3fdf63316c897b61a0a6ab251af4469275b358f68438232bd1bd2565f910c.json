{"ast":null,"code":"import React,{useState,useEffect}from'react';import{confirmAlert}from'react-confirm-alert';// Import\nimport'react-confirm-alert/src/react-confirm-alert.css';// Import css\nimport Button from'@mui/material/Button';import{SERVER_URL}from'../../Constants';// student views a list of assignments and assignment grades \n// use the URL  /assignments?studentId= &year= &semester=\n// The REST api returns a list of SectionDTO objects\n// Use a value of studentId=3 for now. Until login is implemented in assignment 7.\n// display a table with columns  Course Id, Assignment Title, Assignment DueDate, Score\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function AssignmentsStudentView(props){// variables and constants\nconst headers=['Course ID','Assignment Title','Assignment DueDate','Score'];const[assignments,setAssignments]=useState([]);const[search,setSearch]=useState({year:'',semester:''});const[message,setMessage]=useState('');// receive student assignments from database (i think)\nconst fetchAssignments=async()=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/assignments?year=\").concat(search.year,\"&semester=\").concat(search.semester),{method:'GET',headers:{'Authorization':jwt}});if(response.ok){const data=await response.json();setAssignments(data);setMessage(\"\");}else{const json=await response.json();setMessage(\"response error: \"+json.message);}}catch(err){setMessage(\"network error: \"+err);}};const editChange=event=>{setSearch({...search,[event.target.name]:event.target.value});};// return to display\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Student Assignments\"}),/*#__PURE__*/_jsx(\"h4\",{children:message}),/*#__PURE__*/_jsx(\"h4\",{children:\"Enter year and semester. Example: 2024 Spring\"}),/*#__PURE__*/_jsx(\"table\",{className:\"Center\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Year:\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"ayear\",name:\"year\",value:search.year,onChange:editChange})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Semester:\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"asemester\",name:\"semester\",value:search.semester,onChange:editChange})})]})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",id:\"search\",onClick:fetchAssignments,children:\"Search for Assignments\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"table\",{className:\"Center\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:headers.map((a,idx)=>/*#__PURE__*/_jsx(\"th\",{children:a},idx))})}),/*#__PURE__*/_jsx(\"tbody\",{children:assignments.map(a=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:a.courseId}),/*#__PURE__*/_jsx(\"td\",{children:a.title}),/*#__PURE__*/_jsx(\"td\",{children:a.dueDate}),/*#__PURE__*/_jsx(\"td\",{children:a.score})]},a.assignmentId))})]})]});}export default AssignmentsStudentView;","map":{"version":3,"names":["React","useState","useEffect","confirmAlert","Button","SERVER_URL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AssignmentsStudentView","props","headers","assignments","setAssignments","search","setSearch","year","semester","message","setMessage","fetchAssignments","jwt","sessionStorage","getItem","response","fetch","concat","method","ok","data","json","err","editChange","event","target","name","value","children","className","type","id","onChange","onClick","map","a","idx","courseId","title","dueDate","score","assignmentId"],"sources":["/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/student/AssignmentsStudentView.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport Button from '@mui/material/Button';\nimport {SERVER_URL} from '../../Constants';\n\n// student views a list of assignments and assignment grades \n// use the URL  /assignments?studentId= &year= &semester=\n// The REST api returns a list of SectionDTO objects\n// Use a value of studentId=3 for now. Until login is implemented in assignment 7.\n\n// display a table with columns  Course Id, Assignment Title, Assignment DueDate, Score\n\nfunction AssignmentsStudentView(props){\n    // variables and constants\n    const headers = ['Course ID', 'Assignment Title', 'Assignment DueDate', 'Score'];\n    const [assignments, setAssignments] = useState([]);\n    const [search, setSearch] = useState({year:'', semester:''});\n    const [message, setMessage] = useState('');\n\n    // receive student assignments from database (i think)\n    const fetchAssignments = async () => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(\n                `${SERVER_URL}/assignments?year=${search.year}&semester=${search.semester}`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': jwt\n                    }\n                });\n            if (response.ok) {\n                const data = await response.json();\n                setAssignments(data);\n                setMessage(\"\");\n            } else {\n                const json = await response.json();\n                setMessage(\"response error: \"+json.message);\n            }\n        } catch (err) {\n            setMessage(\"network error: \"+err);\n        }\n    }\n\n    const editChange = (event) => {\n        setSearch({...search,  [event.target.name]:event.target.value});\n    }\n\n    // return to display\n    return(\n        <> \n            <h3>Student Assignments</h3>\n            <h4>{message}</h4>\n\n            {\n            //prompt\n            }\n            <h4>Enter year and semester. Example: 2024 Spring</h4>\n            <table className=\"Center\">\n                <tbody>\n                    <tr>\n                        <td>Year:</td>\n                        <td><input type=\"text\" id=\"ayear\" name=\"year\" value={search.year} onChange={editChange} /></td>\n                    </tr>\n                    <tr>\n                        <td>Semester:</td>\n                        <td><input type=\"text\" id=\"asemester\" name=\"semester\" value={search.semester} onChange={editChange} /></td>\n                    </tr>\n                </tbody>\n            </table>\n            <br/>\n\n            <button type=\"submit\" id=\"search\" onClick={fetchAssignments} >Search for Assignments</button>\n            <br/>\n            <br/>\n\n            {\n            //student assignment table list\n            }\n            <table className=\"Center\" >\n                <thead>\n                <tr>\n                    {headers.map((a, idx) => (<th key={idx}>{a}</th>))}\n                </tr>\n                </thead>\n                <tbody>\n                {assignments.map((a) => (\n                    <tr key={a.assignmentId}>\n                        <td>{a.courseId}</td>\n                        <td>{a.title}</td>\n                        <td>{a.dueDate}</td>\n                        <td>{a.score}</td>\n                    </tr>\n                    ))}\n                </tbody>\n            </table>\n\n        </>\n    );\n}\nexport default AssignmentsStudentView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}