{"ast":null,"code":"import React,{useState,useEffect}from'react';import Button from\"@mui/material/Button\";import{useLocation}from'react-router-dom';import'react-confirm-alert/src/react-confirm-alert.css';import{confirmAlert}from\"react-confirm-alert\";import AssignmentUpdate from\"./AssignmentUpdate\";import{SERVER_URL}from'../../Constants';import AssignmentAdd from\"./AssignmentAdd\";import AssignmentGrade from\"./AssignmentGrade\";// instructor views assignments for their section\n// use location to get the section value \n// \n// GET assignments using the URL /sections/{secNo}/assignments\n// returns a list of AssignmentDTOs\n// display a table with columns \n// assignment id, title, dueDate and buttons to grade, edit, delete each assignment\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const AssignmentsView=props=>{const location=useLocation();const{secNo,courseId,secId}=location.state;const[assignments,setAssignments]=useState([]);const headers=['Assignment ID','Title','Due Date','',''];const[message,setMessage]=useState('');const fetchAssignments=async()=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/sections/\").concat(secNo,\"/assignments\"),{method:'GET',headers:{'Authorization':jwt}});if(response.ok){const assignments=await response.json();setAssignments(assignments);}else{const json=await response.json();setMessage('Response error: '+json.message);}}catch(err){setMessage('Network Error: '+err);}};useEffect(()=>{fetchAssignments();},[]);const deleteAlert=event=>{confirmAlert({title:'Confirm to delete',message:'Do you really want to delete',buttons:[{label:'Yes',onClick:()=>doDelete(event)},{label:'No'}]});};const doDelete=event=>{const row_index=event.target.parentNode.parentNode.rowIndex-1;deleteAssignment(assignments[row_index].id);};const deleteAssignment=async assignmentId=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/assignments/\").concat(assignmentId),{method:'DELETE',headers:{'Content-Type':'application/json','Authorization':jwt}});if(response.ok){setMessage('Assignment deleted');fetchAssignments();}else{const rc=await response.json();setMessage('Deleted failed: '+rc.message);}}catch(err){setMessage('Network error: '+err);}};const onSave=async assignment=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/assignments\"),{method:'PUT',headers:{'Content-type':'application/json','Authorization':jwt},body:JSON.stringify(assignment)});if(response.ok){setMessage('Assignment added');await fetchAssignments();}else{const rc=await response.json();setMessage('Save error: '+rc.message);}}catch(err){setMessage('Network error: '+err);}};const addAssignment=async assignment=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/assignments\"),{method:'POST',headers:{'Content-type':'application/json','Authorization':jwt},body:JSON.stringify(assignment)});if(response.ok){setMessage('Assignment added');await fetchAssignments();}else{const rc=await response.json();setMessage('Save error: '+rc.message);}}catch(err){setMessage('Networking error: '+err);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Assignments\"}),/*#__PURE__*/_jsx(\"h4\",{children:message}),/*#__PURE__*/_jsxs(\"table\",{className:\"Center\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:headers.map((h,idx)=>/*#__PURE__*/_jsxs(\"th\",{children:[h,\" \"]},idx))})}),/*#__PURE__*/_jsx(\"tbody\",{children:assignments.map(a=>/*#__PURE__*/_jsxs(\"tr\",{id:a.id,children:[/*#__PURE__*/_jsx(\"td\",{children:a.id}),/*#__PURE__*/_jsx(\"td\",{children:a.title}),/*#__PURE__*/_jsx(\"td\",{children:a.dueDate}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(AssignmentGrade,{asgnmtId:a.id})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(AssignmentUpdate,{assignment:a,save:onSave})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{onClick:deleteAlert,children:\"Delete\"})})]},a.id))})]}),/*#__PURE__*/_jsx(AssignmentAdd,{sectionNo:secNo,courseId:courseId,sectionId:secId,save:addAssignment})]});};export default AssignmentsView;","map":{"version":3,"names":["React","useState","useEffect","Button","useLocation","confirmAlert","AssignmentUpdate","SERVER_URL","AssignmentAdd","AssignmentGrade","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AssignmentsView","props","location","secNo","courseId","secId","state","assignments","setAssignments","headers","message","setMessage","fetchAssignments","jwt","sessionStorage","getItem","response","fetch","concat","method","ok","json","err","deleteAlert","event","title","buttons","label","onClick","doDelete","row_index","target","parentNode","rowIndex","deleteAssignment","id","assignmentId","rc","onSave","assignment","body","JSON","stringify","addAssignment","children","className","map","h","idx","a","dueDate","asgnmtId","save","sectionNo","sectionId"],"sources":["/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/instructor/AssignmentsView.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Button from \"@mui/material/Button\";\nimport {useLocation} from 'react-router-dom';\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport {confirmAlert} from \"react-confirm-alert\";\nimport AssignmentUpdate from \"./AssignmentUpdate\";\nimport {SERVER_URL} from '../../Constants';\nimport AssignmentAdd from \"./AssignmentAdd\";\nimport AssignmentGrade from \"./AssignmentGrade\";\n\n\n// instructor views assignments for their section\n// use location to get the section value \n// \n// GET assignments using the URL /sections/{secNo}/assignments\n// returns a list of AssignmentDTOs\n// display a table with columns \n// assignment id, title, dueDate and buttons to grade, edit, delete each assignment\n\nconst AssignmentsView = (props) => {\n\n    const location = useLocation();\n    const {secNo, courseId, secId} = location.state;\n\n    const [assignments, setAssignments] = useState([]);\n    const headers = ['Assignment ID', 'Title', 'Due Date', '', ''];\n    const [message, setMessage] = useState('');\n    const fetchAssignments = async () =>{\n        try{\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(`${SERVER_URL}/sections/${secNo}/assignments`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': jwt,\n                    },\n\n                });\n            if (response.ok){\n                const assignments = await response.json()\n                setAssignments(assignments);\n            } else {\n                const json = await response.json();\n                setMessage('Response error: '+json.message);\n            }\n        } catch(err) {\n            setMessage('Network Error: ' +err);\n        }\n    }\n\n    useEffect( () =>{\n        fetchAssignments();\n    }, []);\n\n    const deleteAlert = (event) => {\n        confirmAlert({\n            title: 'Confirm to delete',\n            message: 'Do you really want to delete',\n            buttons:[\n                {\n                    label: 'Yes',\n                    onClick: () => doDelete(event)\n                },\n        {\n            label: 'No',\n        }\n            ]\n        })\n    }\n\n    const doDelete= (event) => {\n        const row_index =event.target.parentNode.parentNode.rowIndex -1;\n        deleteAssignment(assignments[row_index].id);\n\n    }\n\n    const deleteAssignment = async (assignmentId) =>{\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch (`${SERVER_URL}/assignments/${assignmentId}`,\n                {\n                    method: 'DELETE',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': jwt\n                    },\n                });\n            if(response.ok) {\n                setMessage('Assignment deleted');\n                fetchAssignments();\n            } else {\n                const rc = await response.json();\n                setMessage('Deleted failed: ' + rc.message);\n            }\n        } catch (err) {\n            setMessage('Network error: ' + err);\n        }\n    }\n\n\n    const onSave = async (assignment) =>{\n        try {\n\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(`${SERVER_URL}/assignments`,\n                {\n                    method: 'PUT',\n                    headers: {\n                        'Content-type': 'application/json',\n                        'Authorization': jwt\n                    },\n                    body: JSON.stringify(assignment),\n                });\n            if (response.ok){\n                setMessage('Assignment added');\n                await fetchAssignments();\n            } else {\n                const rc = await response.json();\n                setMessage('Save error: ' + rc.message);\n            }\n        } catch(err) {\n            setMessage('Network error: ' + err);\n        }\n    }\n\n    const addAssignment = async (assignment) =>{\n        try{\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(`${SERVER_URL}/assignments`,\n                {\n                    method: 'POST',\n                    headers:{\n                        'Content-type': 'application/json',\n                        'Authorization': jwt\n                    },\n                    body: JSON.stringify(assignment)\n                });\n            if(response.ok){\n                setMessage('Assignment added');\n                await fetchAssignments();\n            } else{\n                const rc = await response.json();\n                setMessage('Save error: '+ rc.message);\n            }\n        } catch (err){\n            setMessage('Networking error: ' +err);\n        }\n    }\n     \n    return(\n        <>\n            <h3>Assignments</h3>\n            <h4>{message}</h4>\n            <table className = 'Center'>\n                <thead>\n                <tr>\n                    {headers.map((h,idx) => <th key={idx}>{h} </th>)}\n                </tr>\n                </thead>\n                <tbody>\n                {assignments.map((a) =>\n                    <tr id={a.id} key={a.id}>\n                        <td>{a.id}</td>\n                        <td>{a.title}</td>\n                        <td>{a.dueDate}</td>\n                        <td><AssignmentGrade asgnmtId={a.id} /></td>\n                        <td><AssignmentUpdate assignment={a} save={onSave} /></td>\n                        <td><Button onClick={deleteAlert}>Delete</Button></td>\n                    </tr>\n                )}\n                </tbody>\n            </table>\n            <AssignmentAdd sectionNo={secNo} courseId={courseId} sectionId={secId} save={addAssignment}/>\n        </>\n    );\n}\n\nexport default AssignmentsView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}