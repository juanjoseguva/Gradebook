{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useLocation}from'react-router-dom';import{SERVER_URL}from\"../../Constants\";import Button from\"@mui/material/Button\";// instructor view list of students enrolled in a section \n// use location to get section no passed from InstructorSectionsView\n// fetch the enrollments using URL /sections/{secNo}/enrollments\n// display table with columns\n//   'enrollment id', 'student id', 'name', 'email', 'grade'\n//  grade column is an input field\n//  hint:  <input type=\"text\" name=\"grade\" value={e.grade} onChange={onGradeChange} />\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const EnrollmentsView=props=>{const location=useLocation();const{secNo,courseId,secId}=location.state;const[enrollments,setEnrollments]=useState([]);const headers=['Enrollment ID','Student ID','Name','Email','Grade',''];const[message,setMessage]=useState('');const[editRow,setEditRow]=useState(-1);const[editEnrollment,setEditEnrollment]=useState({enrollmentId:\"\",grade:\"\",studentId:\"\",name:\"\",email:\"\",courseId:\"\",sectionId:\"\",sectionNo:\"\",building:\"\",room:\"\",times:\"\",credits:\"\",year:\"\",semester:\"\"});const fetchEnrollments=async()=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/sections/\").concat(secNo,\"/enrollments\"),{method:'GET',headers:{'Authorization':jwt}});if(response.ok){const enrollments=await response.json();setEnrollments(enrollments);}else{const json=await response.json();setMessage(\"Response error: \"+json.message);}}catch(err){setMessage('Network Error: '+err);}};const onGradeChange=async event=>{setEditEnrollment({...editEnrollment,[event.target.name]:event.target.value});};const saveGrade=async()=>{setEditRow(-1);try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/enrollments\"),{method:'PUT',headers:{'Content-Type':'application/json','Authorization':jwt},body:JSON.stringify([editEnrollment])});if(response.ok){setMessage('Grade saved');await fetchEnrollments();}else{const rc=await response.json();setMessage('Save error: '+rc.message);}}catch(err){setMessage('Network error: '+err);}};const onEdit=event=>{const row=event.target.parentNode.parentNode.rowIndex-1;const e=enrollments[row];setEditEnrollment({...e});setEditRow(row);};const displayEnrollment=(e,idx)=>{if(editRow!==idx){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:e.enrollmentId}),/*#__PURE__*/_jsx(\"td\",{children:e.studentId}),/*#__PURE__*/_jsx(\"td\",{children:e.name}),/*#__PURE__*/_jsx(\"td\",{children:e.email}),/*#__PURE__*/_jsx(\"td\",{children:e.grade}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Button,{onClick:onEdit,name:'changer',children:\"Change Grade\"}),\" \"]})]},e.enrollmentId);}else{return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:e.enrollmentId}),/*#__PURE__*/_jsx(\"td\",{children:e.studentId}),/*#__PURE__*/_jsx(\"td\",{children:e.name}),/*#__PURE__*/_jsx(\"td\",{children:e.email}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:'text',name:'grade',value:editEnrollment.grade,onChange:onGradeChange})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{onClick:saveGrade,name:'saver',children:\"Save\"})})]},e.enrollmentId);}};useEffect(()=>{fetchEnrollments();},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Enrollments\"}),/*#__PURE__*/_jsx(\"h4\",{name:'messager',children:message}),/*#__PURE__*/_jsxs(\"table\",{className:'Center',children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:headers.map((h,idx)=>/*#__PURE__*/_jsx(\"th\",{children:h},idx))})}),/*#__PURE__*/_jsx(\"tbody\",{children:enrollments.map((e,idx)=>displayEnrollment(e,idx))})]})]});};export default EnrollmentsView;","map":{"version":3,"names":["React","useState","useEffect","useLocation","SERVER_URL","Button","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EnrollmentsView","props","location","secNo","courseId","secId","state","enrollments","setEnrollments","headers","message","setMessage","editRow","setEditRow","editEnrollment","setEditEnrollment","enrollmentId","grade","studentId","name","email","sectionId","sectionNo","building","room","times","credits","year","semester","fetchEnrollments","jwt","sessionStorage","getItem","response","fetch","concat","method","ok","json","err","onGradeChange","event","target","value","saveGrade","body","JSON","stringify","rc","onEdit","row","parentNode","rowIndex","e","displayEnrollment","idx","children","onClick","type","onChange","className","map","h"],"sources":["/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/instructor/EnrollmentsView.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nimport {SERVER_URL} from \"../../Constants\";\n\nimport Button from \"@mui/material/Button\";\n\n// instructor view list of students enrolled in a section \n// use location to get section no passed from InstructorSectionsView\n// fetch the enrollments using URL /sections/{secNo}/enrollments\n// display table with columns\n//   'enrollment id', 'student id', 'name', 'email', 'grade'\n//  grade column is an input field\n//  hint:  <input type=\"text\" name=\"grade\" value={e.grade} onChange={onGradeChange} />\n\nconst EnrollmentsView = (props) => {\n\n    const location = useLocation();\n    const {secNo, courseId, secId} = location.state;\n\n    const [enrollments, setEnrollments] = useState([ ]);\n    const headers = ['Enrollment ID', 'Student ID', 'Name', 'Email', 'Grade',''];\n    const [message, setMessage] = useState('');\n\n    const [editRow, setEditRow] = useState(-1);\n    const [editEnrollment, setEditEnrollment] = useState({\n        enrollmentId: \"\",\n        grade: \"\",\n        studentId: \"\",\n        name: \"\",\n        email: \"\",\n        courseId: \"\",\n        sectionId: \"\",\n        sectionNo: \"\",\n        building: \"\",\n        room: \"\",\n        times: \"\",\n        credits: \"\",\n        year: \"\",\n        semester: \"\"\n    });\n\n    const fetchEnrollments = async () =>{\n        try{\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(\n                `${SERVER_URL}/sections/${secNo}/enrollments`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': jwt\n                    }\n                });\n            if (response.ok){\n                const enrollments = await response.json();\n                setEnrollments(enrollments);\n            }else{\n                const json = await response.json();\n                setMessage(\"Response error: \"+json.message);\n            }\n        } catch (err){\n            setMessage('Network Error: ' +err);\n        }\n    }\n\n    const onGradeChange = async (event) =>{\n        setEditEnrollment({...editEnrollment, [event.target.name]: event.target.value});\n    }\n    const saveGrade = async () =>{\n        setEditRow(-1);\n\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(`${SERVER_URL}/enrollments`, {\n\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': jwt\n                },\n                body: JSON.stringify([editEnrollment])\n            });\n            if (response.ok) {\n                setMessage('Grade saved');\n                await fetchEnrollments();\n            } else {\n                const rc = await response.json();\n                setMessage('Save error: '+rc.message);\n            }\n        } catch (err) {\n            setMessage('Network error: ' + err);\n        }\n    }\n\n    const onEdit = (event) =>{\n        const row = event.target.parentNode.parentNode.rowIndex -1;\n        const e = enrollments[row];\n        setEditEnrollment({...e});\n        setEditRow(row);\n    }\n\n    const displayEnrollment =(e, idx) =>{\n        if(editRow!==idx) {\n            return(\n            <tr key={e.enrollmentId}>\n                <td>{e.enrollmentId}</td>\n                <td>{e.studentId}</td>\n                <td>{e.name}</td>\n                <td>{e.email}</td>\n                <td>{e.grade}</td>\n                <td><Button onClick={onEdit} name={'changer'}>Change Grade</Button> </td>\n            </tr>\n            );\n        } else {\n            return(\n            <tr key={e.enrollmentId}>\n                <td>{e.enrollmentId}</td>\n                <td>{e.studentId}</td>\n                <td>{e.name}</td>\n                <td>{e.email}</td>\n                <td><input type={'text'} name={'grade'} value={editEnrollment.grade} onChange={onGradeChange}/></td>\n                <td><Button onClick={saveGrade} name={'saver'}>Save</Button></td>\n            </tr>\n            );\n        }\n    }\n    useEffect(() => {\n        fetchEnrollments();\n    }, []);\n\n    return (\n        <>\n            <h3>Enrollments</h3>\n            <h4 name={'messager'}>{message}</h4>\n            <table className={'Center'}>\n                <thead>\n                <tr>\n                    {headers.map((h, idx) => <th key={idx}>{h}</th>)}\n                </tr>\n                </thead>\n                <tbody>\n                {enrollments.map((e, idx) =>\n                    displayEnrollment(e, idx)\n                )}\n                </tbody>\n            </table>\n        </>\n    );\n}\n\nexport default EnrollmentsView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}