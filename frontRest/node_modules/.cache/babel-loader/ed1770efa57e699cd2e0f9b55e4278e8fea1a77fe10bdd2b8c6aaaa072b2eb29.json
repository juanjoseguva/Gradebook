{"ast":null,"code":"import React,{useState,useEffect}from'react';import{SERVER_URL}from'../../Constants';import Dialog from'@mui/material/Dialog';import DialogActions from'@mui/material/DialogActions';import DialogContent from'@mui/material/DialogContent';import DialogTitle from'@mui/material/DialogTitle';import Button from'@mui/material/Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const AssignmentGrade=props=>{const headers=['Grade ID','Student Name','Student Email','Score',''];const[open,setOpen]=useState(false);const[editMessage,setEditMessage]=useState('');const[grades,setGrades]=useState([]);const editOpen=()=>{setEditMessage('');setOpen(true);fetchGrades();};const editClose=()=>{setOpen(false);setGrades([]);setEditMessage('');};const onChange=event=>{setGrades([...grades]);const row_idx=event.target.parentNode.parentNode.rowIndex-1;grades[row_idx].score=event.target.value;};const onSave=async()=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/grades\"),{method:'PUT',headers:{'Content-Type':'application/json','Authorization':jwt},body:JSON.stringify(grades)});if(response.ok){setEditMessage(\"Grades saved!\");}else{const rc=await response.json();setEditMessage(\"Response error: \"+rc.message);}}catch(err){setEditMessage(\"Network error: \"+err);}};const fetchGrades=async()=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/assignments/\").concat(props.asgnmtId,\"/grades\"),{method:\"GET\",headers:{\"Authorization\":jwt}});if(response.ok){const grades=await response.json();setGrades(grades);}else{const rc=await response.json();setEditMessage(\"Response error: \"+rc.message);}}catch(err){setEditMessage(\"network error: \"+err);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{onClick:editOpen,children:\"Grades\"}),/*#__PURE__*/_jsxs(Dialog,{open:open,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Assignment Grades\"}),/*#__PURE__*/_jsxs(DialogContent,{style:{paddingTop:20},children:[/*#__PURE__*/_jsx(\"h4\",{id:\"editMessage\",children:editMessage}),/*#__PURE__*/_jsxs(\"table\",{className:\"Center\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:headers.map((g,idx)=>/*#__PURE__*/_jsx(\"th\",{children:g},idx))})}),/*#__PURE__*/_jsx(\"tbody\",{children:grades.map((g,idx)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:g.gradeId}),/*#__PURE__*/_jsx(\"td\",{children:g.studentName}),/*#__PURE__*/_jsx(\"td\",{children:g.studentEmail}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"score\",value:g.score,onChange:onChange})})]},g.gradeId))})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{id:\"closeGrades\",color:\"secondary\",onClick:editClose,children:\"Close\"}),/*#__PURE__*/_jsx(Button,{id:\"saveGrades\",color:\"primary\",onClick:onSave,children:\"Save\"})]})]})]});};export default AssignmentGrade;","map":{"version":3,"names":["React","useState","useEffect","SERVER_URL","Dialog","DialogActions","DialogContent","DialogTitle","Button","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AssignmentGrade","props","headers","open","setOpen","editMessage","setEditMessage","grades","setGrades","editOpen","fetchGrades","editClose","onChange","event","row_idx","target","parentNode","rowIndex","score","value","onSave","jwt","sessionStorage","getItem","response","fetch","concat","method","body","JSON","stringify","ok","rc","json","message","err","asgnmtId","children","onClick","style","paddingTop","id","className","map","g","idx","gradeId","studentName","studentEmail","type","name","color"],"sources":["/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/instructor/AssignmentGrade.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {SERVER_URL} from '../../Constants';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\n\nconst AssignmentGrade = (props) => {\n\n    const headers = ['Grade ID', 'Student Name', 'Student Email', 'Score', ''];\n    const [open, setOpen] = useState(false);\n    const [editMessage, setEditMessage] = useState('');\n    const [grades, setGrades] = useState([]);\n\n    const editOpen = () => {\n        setEditMessage('');\n        setOpen(true);\n        fetchGrades();\n    };\n\n    const editClose = () => {\n        setOpen(false);\n        setGrades([]);\n        setEditMessage('');\n    };\n\n    const onChange = (event) => {\n        setGrades([...grades]);\n        const row_idx = event.target.parentNode.parentNode.rowIndex - 1;\n        grades[row_idx].score = event.target.value;\n    }\n    const onSave = async () => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(`${SERVER_URL}/grades`,\n            {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': jwt\n                },\n                body: JSON.stringify(grades)\n            });\n            if (response.ok) {\n                setEditMessage(\"Grades saved!\");\n            } else {\n                const rc = await response.json();\n                setEditMessage(\"Response error: \" + rc.message);\n            }\n        } catch (err) {\n            setEditMessage(\"Network error: \" + err);\n        }\n    }\n\n    const fetchGrades = async () => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(\n                `${SERVER_URL}/assignments/${props.asgnmtId}/grades`,\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": jwt\n                    }\n                });\n            if (response.ok) {\n                const grades = await response.json();\n                setGrades(grades);\n            } else {\n                const rc = await response.json();\n                setEditMessage(\"Response error: \" + rc.message);\n            }\n        } catch (err) {\n            setEditMessage(\"network error: \" + err);\n        }\n    }\n\n    return (\n        <>\n            <Button onClick={editOpen}>Grades</Button>\n            <Dialog open={open} >\n                <DialogTitle>Assignment Grades</DialogTitle>\n                <DialogContent style={{ paddingTop: 20 }} >\n                    <h4 id=\"editMessage\">{editMessage}</h4>\n                    <table className=\"Center\" >\n                        <thead>\n                        <tr>\n                            {headers.map((g, idx) => (<th key={idx}>{g}</th>))}\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {grades.map((g, idx) => (\n                            <tr key={g.gradeId}>\n                                <td>{g.gradeId}</td>\n                                <td>{g.studentName}</td>\n                                <td>{g.studentEmail}</td>\n                                <td><input type=\"text\" name=\"score\" value={g.score} onChange={onChange} /></td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </DialogContent>\n                <DialogActions>\n                    <Button id=\"closeGrades\" color=\"secondary\" onClick={editClose}>Close</Button>\n                    <Button id=\"saveGrades\" color=\"primary\" onClick={onSave}>Save</Button>\n                </DialogActions>\n            </Dialog>\n\n        </>\n    );\n}\n\nexport default AssignmentGrade;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}