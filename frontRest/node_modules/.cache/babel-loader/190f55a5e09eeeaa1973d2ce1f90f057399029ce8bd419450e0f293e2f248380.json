{"ast":null,"code":"import React,{useState,useEffect}from'react';import SectionUpdate from\"../admin/SectionUpdate\";import Button from\"@mui/material/Button\";import SectionAdd from\"../admin/SectionAdd\";import{SERVER_URL}from\"../../Constants\";import{Link,useLocation}from\"react-router-dom\";// instructor views a list of sections they are teaching\n// use the URL /sections?email=dwisneski@csumb.edu&year= &semester=\n// the email= will be removed in assignment 7 login security\n// The REST api returns a list of SectionDTO objects\n// The table of sections contains columns\n//   section no, course id, section id, building, room, times and links to assignments and enrollments\n// hint:\n// <Link to=\"/enrollments\" state={section}>View Enrollments</Link>\n// <Link to=\"/assignments\" state={section}>View Assignments</Link>\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const InstructorSectionsView=props=>{const headers=['SecNo','CourseId','SecId','Building','Room','Times','',''];const[sections,setSections]=useState([]);const[message,setMessage]=useState('');const location=useLocation();const section=location.state;// Retained from the HEAD branch\nconst fetchSections=async()=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/sections?year=\").concat(section.year,\"&semester=\").concat(section.semester),{method:'GET',headers:{'Authorization':jwt}});if(response.ok){const data=await response.json();console.log('Sections data received from server:',data);setSections(data);}else{const rc=await response.json();setMessage(rc.message);}}catch(err){setMessage(\"network error: \"+err);}};useEffect(()=>{fetchSections();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Sections\"}),/*#__PURE__*/_jsx(\"h4\",{children:message}),/*#__PURE__*/_jsx(\"h4\",{children:\"Your current sections\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"Center\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:headers.map((s,idx)=>/*#__PURE__*/_jsx(\"th\",{children:s},idx))})}),/*#__PURE__*/_jsx(\"tbody\",{children:sections.map(s=>/*#__PURE__*/_jsxs(\"tr\",{id:s.secNo,children:[/*#__PURE__*/_jsx(\"td\",{children:s.secNo}),/*#__PURE__*/_jsx(\"td\",{children:s.courseId}),/*#__PURE__*/_jsx(\"td\",{children:s.secId}),/*#__PURE__*/_jsx(\"td\",{children:s.building}),/*#__PURE__*/_jsx(\"td\",{children:s.room}),/*#__PURE__*/_jsx(\"td\",{children:s.times}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:\"/enrollments\",state:s,children:\"View Enrollments\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:\"/assignments\",state:s,children:\"View Assignments\"})})]},s.secNo))})]}),/*#__PURE__*/_jsx(SectionAdd,{onClose:fetchSections})]});};export default InstructorSectionsView;","map":{"version":3,"names":["React","useState","useEffect","SectionUpdate","Button","SectionAdd","SERVER_URL","Link","useLocation","jsx","_jsx","jsxs","_jsxs","InstructorSectionsView","props","headers","sections","setSections","message","setMessage","location","section","state","fetchSections","jwt","sessionStorage","getItem","response","fetch","concat","year","semester","method","ok","data","json","console","log","rc","err","children","className","map","s","idx","id","secNo","courseId","secId","building","room","times","to","onClose"],"sources":["/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/instructor/InstructorSectionsView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SectionUpdate from \"../admin/SectionUpdate\";\nimport Button from \"@mui/material/Button\";\nimport SectionAdd from \"../admin/SectionAdd\";\nimport { SERVER_URL } from \"../../Constants\";\nimport { Link, useLocation } from \"react-router-dom\";\n\n// instructor views a list of sections they are teaching\n// use the URL /sections?email=dwisneski@csumb.edu&year= &semester=\n// the email= will be removed in assignment 7 login security\n// The REST api returns a list of SectionDTO objects\n// The table of sections contains columns\n//   section no, course id, section id, building, room, times and links to assignments and enrollments\n// hint:\n// <Link to=\"/enrollments\" state={section}>View Enrollments</Link>\n// <Link to=\"/assignments\" state={section}>View Assignments</Link>\n\nconst InstructorSectionsView = (props) => {\n\n    const headers = ['SecNo', 'CourseId', 'SecId', 'Building', 'Room', 'Times', '', ''];\n\n    const [sections, setSections] = useState([]);\n\n    const [message, setMessage] = useState('');\n\n    const location = useLocation();\n\n    const section = location.state; // Retained from the HEAD branch\n\n    const fetchSections = async () => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(\n                `${SERVER_URL}/sections?year=${section.year}&semester=${section.semester}`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': jwt,\n                    },\n\n                });\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log('Sections data received from server:', data);\n                setSections(data);\n            } else {\n                const rc = await response.json();\n                setMessage(rc.message);\n            }\n        } catch(err) {\n            setMessage(\"network error: \" + err);\n        }\n    }\n\n    useEffect(() => {\n        fetchSections();\n    }, []);\n\n    return (\n        <div>\n            <h3>Sections</h3>\n            <h4>{message}</h4>\n            <h4>Your current sections</h4>\n            <table className=\"Center\" >\n                <thead>\n                    <tr>\n                        {headers.map((s, idx) => (<th key={idx}>{s}</th>))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {sections.map((s) => (\n                        <tr id={s.secNo} key={s.secNo}>\n                            <td>{s.secNo}</td>\n                            <td>{s.courseId}</td>\n                            <td>{s.secId}</td>\n                            <td>{s.building}</td>\n                            <td>{s.room}</td>\n                            <td>{s.times}</td>\n                            <td><Link to=\"/enrollments\" state={s}>View Enrollments</Link></td>\n                            <td><Link to=\"/assignments\" state={s}>View Assignments</Link></td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <SectionAdd onClose={fetchSections} />\n        </div>\n    );\n}\n\nexport default InstructorSectionsView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}