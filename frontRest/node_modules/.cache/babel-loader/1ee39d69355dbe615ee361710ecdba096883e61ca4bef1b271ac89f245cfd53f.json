{"ast":null,"code":"var _jsxFileName = \"/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/student/Transcript.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport Button from '@mui/material/Button';\nimport { SERVER_URL } from '../../Constants';\n\n// students gets a list of all courses taken and grades\n// use the URL /transcript?studentId=\n// the REST api returns a list of EnrollmentDTO objects\n// the table should have columns for\n//  Year, Semester, CourseId, SectionId, Title, Credits, Grade\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transcript = props => {\n  _s();\n  const headers = ['Year', 'Semester', 'Course ID', 'Section ID', 'Title', 'Credits', 'Grade'];\n  const [transcript, setTranscript] = useState([]);\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const [studId, setStudId] = useState('');\n\n  // let name = \"\";\n  // let sId = \"\";\n\n  const fetchTranscript = async () => {\n    try {\n      const jwt = sessionStorage.getItem('jwt');\n      const response = await fetch(`${SERVER_URL}/transcripts`, {\n        method: 'GET',\n        headers: {\n          'Authorization': jwt\n        }\n      });\n      if (response.ok) {\n        const transcript = await response.json();\n        setTranscript(transcript);\n        setName(transcript[0].name);\n        setStudId(transcript[0].studentId);\n      } else {\n        const json = await response.json();\n        //This is where I need to add the student name and id information\n        setMessage(\"response error: \" + json.message);\n      }\n    } catch (err) {\n      setMessage(\"network error: \" + err);\n    }\n  };\n  useEffect(() => {\n    fetchTranscript();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transcript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Student ID: \", studId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"Center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map((h, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: h\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 47\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transcript.slice(1).map(t => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.semester\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.courseId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.sectionId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.courseTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.credits\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.grade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, t.enrollmentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Transcript, \"dy2AVeneX+rKD22LKz+1l3kNH3c=\");\n_c = Transcript;\nexport default Transcript;\nvar _c;\n$RefreshReg$(_c, \"Transcript\");","map":{"version":3,"names":["React","useState","useEffect","confirmAlert","Button","SERVER_URL","jsxDEV","_jsxDEV","Transcript","props","_s","headers","transcript","setTranscript","message","setMessage","name","setName","studId","setStudId","fetchTranscript","jwt","sessionStorage","getItem","response","fetch","method","ok","json","studentId","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","h","idx","slice","t","year","semester","courseId","sectionId","courseTitle","credits","grade","enrollmentId","_c","$RefreshReg$"],"sources":["/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/student/Transcript.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport Button from '@mui/material/Button';\nimport {SERVER_URL} from '../../Constants';\n\n// students gets a list of all courses taken and grades\n// use the URL /transcript?studentId=\n// the REST api returns a list of EnrollmentDTO objects\n// the table should have columns for\n//  Year, Semester, CourseId, SectionId, Title, Credits, Grade\n\nconst Transcript = (props) => {\n\n    const headers = ['Year', 'Semester', 'Course ID',  'Section ID', 'Title', 'Credits', 'Grade'];\n\n    const [transcript, setTranscript] = useState([    ]);\n\n    const [ message, setMessage ] = useState('');\n\n    const [ name, setName ] = useState('');\n\n    const [ studId, setStudId ] = useState('');\n\n    // let name = \"\";\n    // let sId = \"\";\n\n    const  fetchTranscript = async () => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n\n            const response = await fetch(\n                `${SERVER_URL}/transcripts`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': jwt\n                    }\n                });\n            if (response.ok) {\n                const transcript = await response.json();\n                setTranscript(transcript);\n                setName(transcript[0].name);\n                setStudId(transcript[0].studentId);\n            } else {\n                const json = await response.json();\n                //This is where I need to add the student name and id information\n                setMessage(\"response error: \"+json.message);\n            }\n        } catch (err) {\n            setMessage(\"network error: \"+err);\n        }\n    }\n\n    useEffect( () => {\n        fetchTranscript();\n    },  []);\n\n    return(\n        <div>\n            <h3>Transcript</h3>\n            <h4>{message}</h4>\n            <h5>Name: {name}</h5>\n            <h5>Student ID: {studId}</h5>\n            <table className=\"Center\" >\n                <thead>\n                <tr>\n                    {headers.map((h, idx) => (<th key={idx}>{h}</th>))}\n                </tr>\n                </thead>\n                <tbody>\n                {transcript.slice(1).map((t) => (\n                    <tr key={t.enrollmentId}>\n                        <td>{t.year}</td>\n                        <td>{t.semester}</td>\n                        <td>{t.courseId}</td>\n                        <td>{t.sectionId}</td>\n                        <td>{t.courseTitle}</td>\n                        <td>{t.credits}</td>\n                        <td>{t.grade}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Transcript;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,YAAY,QAAQ,qBAAqB,CAAC,CAAC;AACpD,OAAO,iDAAiD,CAAC,CAAC;AAC1D,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAAQC,UAAU,QAAO,iBAAiB;;AAE1C;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B,MAAMC,OAAO,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,EAAG,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC;EAE7F,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAM,CAAC;EAEpD,MAAM,CAAEa,OAAO,EAAEC,UAAU,CAAE,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAAEe,IAAI,EAAEC,OAAO,CAAE,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAAEiB,MAAM,EAAEC,SAAS,CAAE,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA;;EAEA,MAAOmB,eAAe,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA,MAAMC,GAAG,GAAGC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC;MAEzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,GAAEpB,UAAW,cAAa,EAC3B;QACIqB,MAAM,EAAE,KAAK;QACbf,OAAO,EAAE;UACL,eAAe,EAAEU;QACrB;MACJ,CAAC,CAAC;MACN,IAAIG,QAAQ,CAACG,EAAE,EAAE;QACb,MAAMf,UAAU,GAAG,MAAMY,QAAQ,CAACI,IAAI,CAAC,CAAC;QACxCf,aAAa,CAACD,UAAU,CAAC;QACzBK,OAAO,CAACL,UAAU,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC;QAC3BG,SAAS,CAACP,UAAU,CAAC,CAAC,CAAC,CAACiB,SAAS,CAAC;MACtC,CAAC,MAAM;QACH,MAAMD,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC;QACAb,UAAU,CAAC,kBAAkB,GAACa,IAAI,CAACd,OAAO,CAAC;MAC/C;IACJ,CAAC,CAAC,OAAOgB,GAAG,EAAE;MACVf,UAAU,CAAC,iBAAiB,GAACe,GAAG,CAAC;IACrC;EACJ,CAAC;EAED5B,SAAS,CAAE,MAAM;IACbkB,eAAe,CAAC,CAAC;EACrB,CAAC,EAAG,EAAE,CAAC;EAEP,oBACIb,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB5B,OAAA;MAAAwB,QAAA,EAAKjB;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClB5B,OAAA;MAAAwB,QAAA,GAAI,QAAM,EAACf,IAAI;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrB5B,OAAA;MAAAwB,QAAA,GAAI,cAAY,EAACb,MAAM;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7B5B,OAAA;MAAO6B,SAAS,EAAC,QAAQ;MAAAL,QAAA,gBACrBxB,OAAA;QAAAwB,QAAA,eACAxB,OAAA;UAAAwB,QAAA,EACKpB,OAAO,CAAC0B,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,kBAAMhC,OAAA;YAAAwB,QAAA,EAAeO;UAAC,GAAPC,GAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACR5B,OAAA;QAAAwB,QAAA,EACCnB,UAAU,CAAC4B,KAAK,CAAC,CAAC,CAAC,CAACH,GAAG,CAAEI,CAAC,iBACvBlC,OAAA;UAAAwB,QAAA,gBACIxB,OAAA;YAAAwB,QAAA,EAAKU,CAAC,CAACC;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjB5B,OAAA;YAAAwB,QAAA,EAAKU,CAAC,CAACE;UAAQ;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrB5B,OAAA;YAAAwB,QAAA,EAAKU,CAAC,CAACG;UAAQ;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrB5B,OAAA;YAAAwB,QAAA,EAAKU,CAAC,CAACI;UAAS;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtB5B,OAAA;YAAAwB,QAAA,EAAKU,CAAC,CAACK;UAAW;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxB5B,OAAA;YAAAwB,QAAA,EAAKU,CAAC,CAACM;UAAO;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpB5B,OAAA;YAAAwB,QAAA,EAAKU,CAAC,CAACO;UAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAPbM,CAAC,CAACQ,YAAY;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQnB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAAzB,EAAA,CA1EKF,UAAU;AAAA0C,EAAA,GAAV1C,UAAU;AA4EhB,eAAeA,UAAU;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}