{"ast":null,"code":"import React,{useState,useEffect}from'react';import{confirmAlert}from'react-confirm-alert';// Import\nimport'react-confirm-alert/src/react-confirm-alert.css';// Import css\nimport Button from'@mui/material/Button';import{SERVER_URL}from'../../Constants';// students gets a list of all courses taken and grades\n// use the URL /transcript?studentId=\n// the REST api returns a list of EnrollmentDTO objects\n// the table should have columns for\n//  Year, Semester, CourseId, SectionId, Title, Credits, Grade\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Transcript=props=>{const headers=['Year','Semester','Course ID','Section ID','Title','Credits','Grade'];const[transcript,setTranscript]=useState([]);const[message,setMessage]=useState('');const[name,setName]=useState('');const[studId,setStudId]=useState('');// let name = \"\";\n// let sId = \"\";\nconst fetchTranscript=async()=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/transcripts\"),{method:'GET',headers:{'Authorization':jwt}});if(response.ok){const transcript=await response.json();setTranscript(transcript);setName(transcript[0].name);setStudId(transcript[0].studentId);}else{const json=await response.json();setMessage(\"response error: \"+json.message);}}catch(err){setMessage(\"network error: \"+err);}};useEffect(()=>{fetchTranscript();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Transcript\"}),/*#__PURE__*/_jsx(\"h4\",{children:message}),/*#__PURE__*/_jsxs(\"h5\",{children:[\"Name: \",name]}),/*#__PURE__*/_jsxs(\"h5\",{children:[\"Student ID: \",studId]}),/*#__PURE__*/_jsxs(\"table\",{className:\"Center\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:headers.map((h,idx)=>/*#__PURE__*/_jsx(\"th\",{children:h},idx))})}),/*#__PURE__*/_jsx(\"tbody\",{children:transcript.slice(1).map(t=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:t.year}),/*#__PURE__*/_jsx(\"td\",{children:t.semester}),/*#__PURE__*/_jsx(\"td\",{children:t.courseId}),/*#__PURE__*/_jsx(\"td\",{children:t.sectionId}),/*#__PURE__*/_jsx(\"td\",{children:t.courseTitle}),/*#__PURE__*/_jsx(\"td\",{children:t.credits}),/*#__PURE__*/_jsx(\"td\",{children:t.grade})]},t.enrollmentId))})]})]});};export default Transcript;","map":{"version":3,"names":["React","useState","useEffect","confirmAlert","Button","SERVER_URL","jsx","_jsx","jsxs","_jsxs","Transcript","props","headers","transcript","setTranscript","message","setMessage","name","setName","studId","setStudId","fetchTranscript","jwt","sessionStorage","getItem","response","fetch","concat","method","ok","json","studentId","err","children","className","map","h","idx","slice","t","year","semester","courseId","sectionId","courseTitle","credits","grade","enrollmentId"],"sources":["/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/student/Transcript.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport Button from '@mui/material/Button';\nimport {SERVER_URL} from '../../Constants';\n\n// students gets a list of all courses taken and grades\n// use the URL /transcript?studentId=\n// the REST api returns a list of EnrollmentDTO objects\n// the table should have columns for\n//  Year, Semester, CourseId, SectionId, Title, Credits, Grade\n\nconst Transcript = (props) => {\n\n    const headers = ['Year', 'Semester', 'Course ID',  'Section ID', 'Title', 'Credits', 'Grade'];\n\n    const [transcript, setTranscript] = useState([    ]);\n\n    const [ message, setMessage ] = useState('');\n\n    const [ name, setName ] = useState('');\n\n    const [ studId, setStudId ] = useState('');\n\n    // let name = \"\";\n    // let sId = \"\";\n\n    const  fetchTranscript = async () => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n\n            const response = await fetch(\n                `${SERVER_URL}/transcripts`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': jwt\n                    }\n                });\n            if (response.ok) {\n                const transcript = await response.json();\n                setTranscript(transcript);\n                setName(transcript[0].name);\n                setStudId(transcript[0].studentId);\n            } else {\n                const json = await response.json();\n                setMessage(\"response error: \"+json.message);\n            }\n        } catch (err) {\n            setMessage(\"network error: \"+err);\n        }\n    }\n\n    useEffect( () => {\n        fetchTranscript();\n    },  []);\n\n    return(\n        <div>\n            <h3>Transcript</h3>\n            <h4>{message}</h4>\n            <h5>Name: {name}</h5>\n            <h5>Student ID: {studId}</h5>\n            <table className=\"Center\" >\n                <thead>\n                <tr>\n                    {headers.map((h, idx) => (<th key={idx}>{h}</th>))}\n                </tr>\n                </thead>\n                <tbody>\n                {transcript.slice(1).map((t) => (\n                    <tr key={t.enrollmentId}>\n                        <td>{t.year}</td>\n                        <td>{t.semester}</td>\n                        <td>{t.courseId}</td>\n                        <td>{t.sectionId}</td>\n                        <td>{t.courseTitle}</td>\n                        <td>{t.credits}</td>\n                        <td>{t.grade}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Transcript;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}