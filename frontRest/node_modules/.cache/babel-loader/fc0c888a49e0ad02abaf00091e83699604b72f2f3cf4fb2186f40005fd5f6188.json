{"ast":null,"code":"var _jsxFileName = \"/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/student/AssignmentsStudentView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport Button from '@mui/material/Button';\nimport { SERVER_URL } from '../../Constants';\n\n// student views a list of assignments and assignment grades \n// use the URL  /assignments?studentId= &year= &semester=\n// The REST api returns a list of SectionDTO objects\n// Use a value of studentId=3 for now. Until login is implemented in assignment 7.\n\n// display a table with columns  Course Id, Assignment Title, Assignment DueDate, Score\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AssignmentsStudentView(props) {\n  _s();\n  // variables and constants\n  const headers = ['Course ID', 'Assignment Title', 'Assignment DueDate', 'Score'];\n  const [assignments, setAssignments] = useState([]);\n  const [search, setSearch] = useState({\n    year: '',\n    semester: ''\n  });\n  const [message, setMessage] = useState('');\n\n  // receive student assignments from database (i think)\n  const fetchAssignments = async () => {\n    try {\n      const jwt = sessionStorage.getItem('jwt');\n      const response = await fetch(`${SERVER_URL}/assignments?year=${search.year}&semester=${search.semester}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': jwt\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setAssignments(data);\n        setMessage(\"\");\n      } else {\n        const json = await response.json();\n        setMessage(\"response error: \" + json.message);\n      }\n    } catch (err) {\n      setMessage(\"network error: \" + err);\n    }\n  };\n  const editChange = event => {\n    setSearch({\n      ...search,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // return to display\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Student Assignments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Enter year and semester. Example: 2024 Spring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"Center\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"ayear\",\n              name: \"year\",\n              value: search.year,\n              onChange: editChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Semester:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"asemester\",\n              name: \"semester\",\n              value: search.semester,\n              onChange: editChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      id: \"search\",\n      onClick: fetchAssignments,\n      children: \"Search for Assignments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"Center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map((a, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: a\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 47\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: assignments.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.courseId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.dueDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, a.assignmentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(AssignmentsStudentView, \"3MmP1C5yAuuRAi9YrveSeZ4UY/E=\");\n_c = AssignmentsStudentView;\nexport default AssignmentsStudentView;\nvar _c;\n$RefreshReg$(_c, \"AssignmentsStudentView\");","map":{"version":3,"names":["React","useState","useEffect","confirmAlert","Button","SERVER_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","AssignmentsStudentView","props","_s","headers","assignments","setAssignments","search","setSearch","year","semester","message","setMessage","fetchAssignments","jwt","sessionStorage","getItem","response","fetch","method","ok","data","json","err","editChange","event","target","name","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","id","onChange","onClick","map","a","idx","courseId","title","dueDate","score","assignmentId","_c","$RefreshReg$"],"sources":["/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/student/AssignmentsStudentView.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport Button from '@mui/material/Button';\nimport {SERVER_URL} from '../../Constants';\n\n// student views a list of assignments and assignment grades \n// use the URL  /assignments?studentId= &year= &semester=\n// The REST api returns a list of SectionDTO objects\n// Use a value of studentId=3 for now. Until login is implemented in assignment 7.\n\n// display a table with columns  Course Id, Assignment Title, Assignment DueDate, Score\n\nfunction AssignmentsStudentView(props){\n    // variables and constants\n    const headers = ['Course ID', 'Assignment Title', 'Assignment DueDate', 'Score'];\n    const [assignments, setAssignments] = useState([]);\n    const [search, setSearch] = useState({year:'', semester:''});\n    const [message, setMessage] = useState('');\n\n    // receive student assignments from database (i think)\n    const fetchAssignments = async () => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(\n                `${SERVER_URL}/assignments?year=${search.year}&semester=${search.semester}`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': jwt\n                    }\n                });\n            if (response.ok) {\n                const data = await response.json();\n                setAssignments(data);\n                setMessage(\"\");\n            } else {\n                const json = await response.json();\n                setMessage(\"response error: \"+json.message);\n            }\n        } catch (err) {\n            setMessage(\"network error: \"+err);\n        }\n    }\n\n    const editChange = (event) => {\n        setSearch({...search,  [event.target.name]:event.target.value});\n    }\n\n    // return to display\n    return(\n        <> \n            <h3>Student Assignments</h3>\n            <h4>{message}</h4>\n\n            {\n            //prompt\n            }\n            <h4>Enter year and semester. Example: 2024 Spring</h4>\n            <table className=\"Center\">\n                <tbody>\n                    <tr>\n                        <td>Year:</td>\n                        <td><input type=\"text\" id=\"ayear\" name=\"year\" value={search.year} onChange={editChange} /></td>\n                    </tr>\n                    <tr>\n                        <td>Semester:</td>\n                        <td><input type=\"text\" id=\"asemester\" name=\"semester\" value={search.semester} onChange={editChange} /></td>\n                    </tr>\n                </tbody>\n            </table>\n            <br/>\n\n            <button type=\"submit\" id=\"search\" onClick={fetchAssignments} >Search for Assignments</button>\n            <br/>\n            <br/>\n\n            {\n            //student assignment table list\n            }\n            <table className=\"Center\" >\n                <thead>\n                <tr>\n                    {headers.map((a, idx) => (<th key={idx}>{a}</th>))}\n                </tr>\n                </thead>\n                <tbody>\n                {assignments.map((a) => (\n                    <tr key={a.assignmentId}>\n                        <td>{a.courseId}</td>\n                        <td>{a.title}</td>\n                        <td>{a.dueDate}</td>\n                        <td>{a.score}</td>\n                    </tr>\n                    ))}\n                </tbody>\n            </table>\n\n        </>\n    );\n}\nexport default AssignmentsStudentView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}