{"ast":null,"code":"import React,{useState,useEffect}from'react';import{confirmAlert}from'react-confirm-alert';// Import\nimport'react-confirm-alert/src/react-confirm-alert.css';// Import css\nimport Button from'@mui/material/Button';import{SERVER_URL}from'../../Constants';// student can view schedule of sections \n// use the URL /enrollment?studentId=3&year= &semester=\n// The REST api returns a list of EnrollmentDTO objects\n// studentId=3 will be removed in assignment 7\n// to drop a course \n// issue a DELETE with URL /enrollment/{enrollmentId}\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const ScheduleView=props=>{// variables and constants\nconst headers=['Enrollment ID','Course ID','Section','Building','Room','Times','Credits',''];const[enrollments,setEnrollments]=useState([]);const[search,setSearch]=useState({year:'',semester:''});const[message,setMessage]=useState('');// receive enrollments from database (i think)\nconst fetchEnrollments=async()=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/enrollments?year=\").concat(search.year,\"&semester=\").concat(search.semester),{method:'GET',headers:{'Authorization':jwt}});if(response.ok){const data=await response.json();setEnrollments(data);setMessage(\"\");}else{const json=await response.json();setMessage(\"response error: \"+json.message);}}catch(err){setMessage(\"network error: \"+err);}};const deleteEnrollment=async enrollmentId=>{try{const jwt=sessionStorage.getItem('jwt');const response=await fetch(\"\".concat(SERVER_URL,\"/enrollments/\").concat(enrollmentId),{method:'DELETE',headers:{'Content-Type':'application/json','Authorization':jwt}});if(response.ok){setMessage(\"Enrollment deleted\");fetchEnrollments();}else{const rc=await response.json();setMessage(\"Delete failed \"+rc.message);}}catch(err){setMessage(\"network error: \"+err+\" enrollmentid: \"+\"\".concat(enrollmentId));}};const onDelete=e=>{const row_idx=e.target.parentNode.parentNode.rowIndex-1;const enrollmentId=enrollments[row_idx].enrollmentId;confirmAlert({title:'Confirm to delete',message:'Do you really want to delete?',buttons:[{label:'Yes',onClick:()=>deleteEnrollment(enrollmentId)},{label:'No'}]});};const editChange=event=>{setSearch({...search,[event.target.name]:event.target.value});};// return to display\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Class Schedule\"}),/*#__PURE__*/_jsx(\"h4\",{children:message}),/*#__PURE__*/_jsx(\"h4\",{children:\"Enter year and semester. Example: 2024 Spring\"}),/*#__PURE__*/_jsx(\"table\",{className:\"Center\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Year:\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"ayear\",name:\"year\",value:search.year,onChange:editChange})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Semester:\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"asemester\",name:\"semester\",value:search.semester,onChange:editChange})})]})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",id:\"search\",onClick:fetchEnrollments,children:\"Search for Schedule\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"table\",{className:\"Center\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:headers.map((e,idx)=>/*#__PURE__*/_jsx(\"th\",{children:e},idx))})}),/*#__PURE__*/_jsx(\"tbody\",{children:enrollments.map(e=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:e.enrollmentId}),/*#__PURE__*/_jsx(\"td\",{children:e.courseId}),/*#__PURE__*/_jsx(\"td\",{children:e.sectionNo}),/*#__PURE__*/_jsx(\"td\",{children:e.building}),/*#__PURE__*/_jsx(\"td\",{children:e.room}),/*#__PURE__*/_jsx(\"td\",{children:e.times}),/*#__PURE__*/_jsx(\"td\",{children:e.credits}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{onClick:onDelete,children:\"Drop\"})})]},e.enrollmentId))})]})]});};export default ScheduleView;","map":{"version":3,"names":["React","useState","useEffect","confirmAlert","Button","SERVER_URL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ScheduleView","props","headers","enrollments","setEnrollments","search","setSearch","year","semester","message","setMessage","fetchEnrollments","jwt","sessionStorage","getItem","response","fetch","concat","method","ok","data","json","err","deleteEnrollment","enrollmentId","rc","onDelete","e","row_idx","target","parentNode","rowIndex","title","buttons","label","onClick","editChange","event","name","value","children","className","type","id","onChange","map","idx","courseId","sectionNo","building","room","times","credits"],"sources":["/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/student/ScheduleView.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport Button from '@mui/material/Button';\nimport {SERVER_URL} from '../../Constants';\n\n// student can view schedule of sections \n// use the URL /enrollment?studentId=3&year= &semester=\n// The REST api returns a list of EnrollmentDTO objects\n// studentId=3 will be removed in assignment 7\n\n// to drop a course \n// issue a DELETE with URL /enrollment/{enrollmentId}\n\nconst ScheduleView = (props) => {\n    // variables and constants\n    const headers = ['Enrollment ID', 'Course ID', 'Section', 'Building', 'Room', 'Times', 'Credits', ''];\n    const [enrollments, setEnrollments] = useState([]);\n    const [search, setSearch] = useState({year:'', semester:''});\n    const [message, setMessage] = useState('');\n\n    // receive enrollments from database (i think)\n    const fetchEnrollments = async () => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(\n                `${SERVER_URL}/enrollments?year=${search.year}&semester=${search.semester}`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': jwt\n                    }\n                });\n            if (response.ok) {\n                const data = await response.json();\n                setEnrollments(data);\n                setMessage(\"\");\n            } else {\n                const json = await response.json();\n                setMessage(\"response error: \"+json.message);\n            }\n        } catch (err) {\n            setMessage(\"network error: \"+err);\n        }\n    }\n\n    const deleteEnrollment = async (enrollmentId) => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch (`${SERVER_URL}/enrollments/${enrollmentId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': jwt\n                },\n            });\n            if (response.ok) {\n                setMessage(\"Enrollment deleted\");\n                fetchEnrollments();\n            } else {\n                const rc = await response.json();\n                setMessage(\"Delete failed \"+rc.message);\n            }\n        } catch (err) {\n            setMessage(\"network error: \"+err + \" enrollmentid: \" + `${enrollmentId}`);\n        }\n    }\n\n    const onDelete = (e) => {\n        const row_idx = e.target.parentNode.parentNode.rowIndex - 1;\n        const enrollmentId = enrollments[row_idx].enrollmentId;\n        confirmAlert({\n            title: 'Confirm to delete',\n            message: 'Do you really want to delete?',\n            buttons: [{\n                label: 'Yes',\n                onClick: () => deleteEnrollment(enrollmentId)\n            },{\n                label: 'No',\n            }]\n        });\n    }\n\n    const editChange = (event) => {\n        setSearch({...search,  [event.target.name]:event.target.value});\n    }\n\n    // return to display\n    return(\n        < > \n            <h3>Class Schedule</h3>\n            <h4>{message}</h4>\n\n            {\n            //prompt\n            }\n            <h4>Enter year and semester. Example: 2024 Spring</h4>\n            <table className=\"Center\">\n                <tbody>\n                    <tr>\n                        <td>Year:</td>\n                        <td><input type=\"text\" id=\"ayear\" name=\"year\" value={search.year} onChange={editChange} /></td>\n                    </tr>\n                    <tr>\n                        <td>Semester:</td>\n                        <td><input type=\"text\" id=\"asemester\" name=\"semester\" value={search.semester} onChange={editChange} /></td>\n                    </tr>\n                </tbody>\n            </table>\n            <br/>\n\n            <button type=\"submit\" id=\"search\" onClick={fetchEnrollments} >Search for Schedule</button>\n            <br/>\n            <br/>\n\n            {\n            //enrollment table list\n            }\n            <table className=\"Center\" >\n                <thead>\n                <tr>\n                    {headers.map((e, idx) => (<th key={idx}>{e}</th>))}\n                </tr>\n                </thead>\n                <tbody>\n                {enrollments.map((e) => (\n                    <tr key={e.enrollmentId}>\n                        <td>{e.enrollmentId}</td>\n                        <td>{e.courseId}</td>\n                        <td>{e.sectionNo}</td>\n                        <td>{e.building}</td>\n                        <td>{e.room}</td>\n                        <td>{e.times}</td>\n                        <td>{e.credits}</td>\n                        <td><Button onClick={onDelete}>Drop</Button></td>\n                    </tr>\n                    ))}\n                </tbody>\n            </table>\n\n\n        </ >\n    );\n}\nexport default ScheduleView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}