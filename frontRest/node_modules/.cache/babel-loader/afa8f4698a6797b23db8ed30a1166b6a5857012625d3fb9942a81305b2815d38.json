{"ast":null,"code":"var _jsxFileName = \"/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/student/CourseEnroll.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css \nimport Button from '@mui/material/Button';\nimport { SERVER_URL } from '../../Constants';\n\n// students displays a list of open sections for a course\n// use the URL /sections/open\n// the REST api returns a list of SectionDTO objects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CourseEnroll(props) {\n  _s();\n  const headers = ['CourseId', 'Section No', 'Term ID', 'Building', 'Meeting Times'];\n  const [sections, setSection] = useState([]);\n  const [message, setMessage] = useState('');\n  const fetchOpenSections = async () => {\n    try {\n      const jwt = sessionStorage.getItem('jwt');\n      const response = await fetch(`${SERVER_URL}/sections/open`, {\n        method: 'GET',\n        headers: {\n          'Authorization': jwt\n        }\n      });\n      if (response.ok) {\n        const sections = await response.json();\n        setSection(sections);\n      } else {\n        const json = await response.json();\n        setMessage(\"response error: \" + json.message);\n      }\n    } catch (err) {\n      setMessage(\"network error \" + err);\n    }\n  };\n  useEffect(() => {\n    fetchOpenSections();\n  }, []);\n\n  // the student can select a section and enroll\n  // issue a POST with the URL /enrollments?secNo= &studentId=3\n  // studentId=3 will be removed in assignment 7.\n\n  const addCourse = async e => {\n    const row_idx = e.target.parentNode.parentNode.rowIndex - 1;\n    const sectionNo = sections[row_idx].secNo;\n    try {\n      const jwt = sessionStorage.getItem('jwt');\n      const response = await fetch(`${SERVER_URL}/enrollments/sections/${sectionNo}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': jwt\n        }\n        //              body: JSON.stringify(section),\n      });\n      if (response.ok) {\n        setMessage(\"course added\");\n        fetchOpenSections();\n      } else {\n        const rc = await response.json();\n        setMessage(rc.message);\n      }\n    } catch (err) {\n      setMessage(\"network error: \" + err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Open Sections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      id: \"addMessage\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"Center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map((s, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: s\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 47\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sections.map(s => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: s.courseId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: s.secId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: s.building\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: s.room\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: s.times\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addCourse,\n              children: \"Add Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, s.sectionNo, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(CourseEnroll, \"hfz7pZKMMaKN5TtnSkA9E/CsvVo=\");\n_c = CourseEnroll;\nexport default CourseEnroll;\nvar _c;\n$RefreshReg$(_c, \"CourseEnroll\");","map":{"version":3,"names":["React","useState","useEffect","confirmAlert","Button","SERVER_URL","jsxDEV","_jsxDEV","CourseEnroll","props","_s","headers","sections","setSection","message","setMessage","fetchOpenSections","jwt","sessionStorage","getItem","response","fetch","method","ok","json","err","addCourse","e","row_idx","target","parentNode","rowIndex","sectionNo","secNo","rc","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","map","s","idx","courseId","secId","building","room","times","onClick","_c","$RefreshReg$"],"sources":["/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/student/CourseEnroll.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css \nimport Button from '@mui/material/Button';\nimport {SERVER_URL} from '../../Constants';\n\n// students displays a list of open sections for a course\n// use the URL /sections/open\n// the REST api returns a list of SectionDTO objects\n\nfunction CourseEnroll(props) {\n\n    const headers = ['CourseId', 'Section No', 'Term ID',  'Building', 'Meeting Times'];\n\n    const [sections, setSection] = useState([    ]);\n\n    const [ message, setMessage ] = useState('');\n\n    const fetchOpenSections = async () => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(\n                `${SERVER_URL}/sections/open`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': jwt\n                    }\n                });\n            if (response.ok) {\n                const sections = await response.json();\n                setSection(sections);\n            } else {\n                const json = await response.json();\n                setMessage(\"response error: \"+json.message);\n            }\n        } catch (err) {\n            setMessage(\"network error \" +err);\n        }\n    }\n\n    useEffect( () => {\n        fetchOpenSections();\n    }, [] );\n\n    // the student can select a section and enroll\n    // issue a POST with the URL /enrollments?secNo= &studentId=3\n    // studentId=3 will be removed in assignment 7.\n\n\n    const addCourse = async (e) => {\n        const row_idx = e.target.parentNode.parentNode.rowIndex - 1;\n        const sectionNo = sections[row_idx].secNo;\n\n        try {\n            const jwt = sessionStorage.getItem('jwt')\n            const response = await fetch (`${SERVER_URL}/enrollments/sections/${sectionNo}`,\n                {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': jwt\n                    },\n                    //              body: JSON.stringify(section),\n                });\n            if (response.ok) {\n                setMessage(\"course added\")\n                fetchOpenSections();\n            } else {\n                const rc = await response.json();\n                setMessage(rc.message);\n            }\n        } catch (err) {\n            setMessage(\"network error: \"+err);\n        }\n    }\n\n\n\n    return(\n        <div>\n            <h3>Open Sections</h3>\n            <h4 id=\"addMessage\">{message}</h4>\n            <table className=\"Center\" >\n                <thead>\n                <tr>\n                    {headers.map((s, idx) => (<th key={idx}>{s}</th>))}\n                </tr>\n                </thead>\n                <tbody>\n                {sections.map((s) => (\n                    <tr key={s.sectionNo}>\n                        <td>{s.courseId}</td>\n                        <td>{s.secId}</td>\n                        <td>{s.building}</td>\n                        <td>{s.room}</td>\n                        <td>{s.times}</td>\n                        <td><Button onClick={addCourse}>Add Course</Button></td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\nexport default CourseEnroll;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}