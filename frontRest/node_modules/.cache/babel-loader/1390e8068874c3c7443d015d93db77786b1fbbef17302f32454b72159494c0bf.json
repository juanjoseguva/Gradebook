{"ast":null,"code":"var _jsxFileName = \"/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/instructor/AssignmentGrade.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { SERVER_URL } from '../../Constants';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AssignmentGrade = props => {\n  _s();\n  const headers = ['Grade ID', 'Student Name', 'Student Email', 'Score', ''];\n  const [open, setOpen] = useState(false);\n  const [editMessage, setEditMessage] = useState('');\n  const [grades, setGrades] = useState([]);\n  const editOpen = () => {\n    setEditMessage('');\n    setOpen(true);\n    fetchGrades();\n  };\n  const editClose = () => {\n    setOpen(false);\n    setGrades([]);\n    setEditMessage('');\n  };\n  const onChange = event => {\n    setGrades([...grades]);\n    const row_idx = event.target.parentNode.parentNode.rowIndex - 1;\n    grades[row_idx].score = event.target.value;\n  };\n  const onSave = async () => {\n    try {\n      const jwt = sessionStorage.getItem('jwt');\n      const response = await fetch(`${SERVER_URL}/grades`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': jwt\n        },\n        body: JSON.stringify(grades)\n      });\n      if (response.ok) {\n        setEditMessage(\"Grades saved!\");\n      } else {\n        const rc = await response.json();\n        setEditMessage(\"Response error: \" + rc.message);\n      }\n    } catch (err) {\n      setEditMessage(\"Network error: \" + err);\n    }\n  };\n  const fetchGrades = async () => {\n    try {\n      const jwt = sessionStorage.getItem('jwt');\n      const response = await fetch(`${SERVER_URL}/assignments/${props.asgnmtId}/grades`, {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": jwt\n        }\n      });\n      if (response.ok) {\n        const grades = await response.json();\n        setGrades(grades);\n      } else {\n        const rc = await response.json();\n        setEditMessage(\"Response error: \" + rc.message);\n      }\n    } catch (err) {\n      setEditMessage(\"network error: \" + err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: editOpen,\n      children: \"Grades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Assignment Grades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {\n          paddingTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          id: \"editMessage\",\n          children: editMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"Center\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: headers.map((g, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: g\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 55\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: grades.map((g, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: g.gradeId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: g.studentName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: g.studentEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"score\",\n                  value: g.score,\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)]\n            }, g.gradeId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          id: \"closeGrades\",\n          color: \"secondary\",\n          onClick: editClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"saveGrades\",\n          color: \"primary\",\n          onClick: onSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AssignmentGrade, \"qutvJF/EqIRIy1PpSBMe2vSg7/0=\");\n_c = AssignmentGrade;\nexport default AssignmentGrade;\nvar _c;\n$RefreshReg$(_c, \"AssignmentGrade\");","map":{"version":3,"names":["React","useState","useEffect","SERVER_URL","Dialog","DialogActions","DialogContent","DialogTitle","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","AssignmentGrade","props","_s","headers","open","setOpen","editMessage","setEditMessage","grades","setGrades","editOpen","fetchGrades","editClose","onChange","event","row_idx","target","parentNode","rowIndex","score","value","onSave","jwt","sessionStorage","getItem","response","fetch","method","body","JSON","stringify","ok","rc","json","message","err","asgnmtId","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingTop","id","className","map","g","idx","gradeId","studentName","studentEmail","type","name","color","_c","$RefreshReg$"],"sources":["/home/juangutierrez/Documents/CST438 - Software Engineering/Gradebook/frontRest/cst438_Assign3/src/components/instructor/AssignmentGrade.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {SERVER_URL} from '../../Constants';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\n\nconst AssignmentGrade = (props) => {\n\n    const headers = ['Grade ID', 'Student Name', 'Student Email', 'Score', ''];\n    const [open, setOpen] = useState(false);\n    const [editMessage, setEditMessage] = useState('');\n    const [grades, setGrades] = useState([]);\n\n    const editOpen = () => {\n        setEditMessage('');\n        setOpen(true);\n        fetchGrades();\n    };\n\n    const editClose = () => {\n        setOpen(false);\n        setGrades([]);\n        setEditMessage('');\n    };\n\n    const onChange = (event) => {\n        setGrades([...grades]);\n        const row_idx = event.target.parentNode.parentNode.rowIndex - 1;\n        grades[row_idx].score = event.target.value;\n    }\n    const onSave = async () => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(`${SERVER_URL}/grades`,\n            {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': jwt\n                },\n                body: JSON.stringify(grades)\n            });\n            if (response.ok) {\n                setEditMessage(\"Grades saved!\");\n            } else {\n                const rc = await response.json();\n                setEditMessage(\"Response error: \" + rc.message);\n            }\n        } catch (err) {\n            setEditMessage(\"Network error: \" + err);\n        }\n    }\n\n    const fetchGrades = async () => {\n        try {\n            const jwt = sessionStorage.getItem('jwt');\n            const response = await fetch(\n                `${SERVER_URL}/assignments/${props.asgnmtId}/grades`,\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": jwt\n                    }\n                });\n            if (response.ok) {\n                const grades = await response.json();\n                setGrades(grades);\n            } else {\n                const rc = await response.json();\n                setEditMessage(\"Response error: \" + rc.message);\n            }\n        } catch (err) {\n            setEditMessage(\"network error: \" + err);\n        }\n    }\n\n    return (\n        <>\n            <Button onClick={editOpen}>Grades</Button>\n            <Dialog open={open} >\n                <DialogTitle>Assignment Grades</DialogTitle>\n                <DialogContent style={{ paddingTop: 20 }} >\n                    <h4 id=\"editMessage\">{editMessage}</h4>\n                    <table className=\"Center\" >\n                        <thead>\n                        <tr>\n                            {headers.map((g, idx) => (<th key={idx}>{g}</th>))}\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {grades.map((g, idx) => (\n                            <tr key={g.gradeId}>\n                                <td>{g.gradeId}</td>\n                                <td>{g.studentName}</td>\n                                <td>{g.studentEmail}</td>\n                                <td><input type=\"text\" name=\"score\" value={g.score} onChange={onChange} /></td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </DialogContent>\n                <DialogActions>\n                    <Button id=\"closeGrades\" color=\"secondary\" onClick={editClose}>Close</Button>\n                    <Button id=\"saveGrades\" color=\"primary\" onClick={onSave}>Save</Button>\n                </DialogActions>\n            </Dialog>\n\n        </>\n    );\n}\n\nexport default AssignmentGrade;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}